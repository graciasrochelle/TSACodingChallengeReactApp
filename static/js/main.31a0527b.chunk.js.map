{"version":3,"sources":["Components/Loader/loading.gif","Components/Header.js","Components/Footer.js","Components/Loader/Loader.js","mockData.js","apiService.js","Components/ContactList/ContactTable.js","Components/ContactList/ContactList.js","Components/NoMatch.js","Components/AddContact/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","Footer","Loader","alt","src","loading","mockData","displayContactDetails","contacts","id","email","fullName","phoneNumbers","url","setData","a","fetch","res","ok","json","payload","data","isLoading","alert","console","error","useFetchContacts","defaultResponse","useState","useEffect","setTimeout","fetchContacts","addContact","endpoint","reqt","controller","AbortController","signal","abort","isSuccess","method","headers","Accept","body","JSON","stringify","then","ContactTable","props","maxColumnSpan","length","rows","Table","responsive","striped","bordered","hover","map","h","i","key","r","join","colspan","Alert","variant","colSpan","Button","ContactList","fetchResponse","apiEndpoint","apiService","NoMatch","location","useLocation","pathname","useInput","initialValue","value","setValue","reset","bind","onChange","event","target","useInputPhoneNumber","con","tempArr","split","AddContact","bindFullName","resetFullName","bindEmail","resetEmail","bindPhoneNumbers","resetPhoneNumbers","request","setRequest","isValid","setValid","onSubmit","evt","preventDefault","phoneRegEx","RegExp","match","addContactEndpoint","htmlFor","type","required","placeholder","App","exact","path","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.31a0527b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.466ec83d.gif\";","import React from \"react\";\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark justify-content-center\">\r\n\t\t\t\t<a className=\"navbar-brand\" href=\"/\">\r\n\t\t\t\t\t<h1 className=\"text-center\">Coding Challenge</h1>\r\n\t\t\t\t</a>\r\n\t\t\t</nav>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n\treturn (\r\n\t\t<footer className=\"py-1 bg-dark text-white\">\r\n\t\t\t<h5 className=\"text-center\">Website by Rochelle Gracias</h5>\r\n\t\t</footer>\r\n\t);\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport loading from \"./loading.gif\";\r\n\r\nfunction Loader() {\r\n\treturn (\r\n\t\t<div className=\"col-9 mx-auto col-md-6 col-lg-3 my-3 align-self-center \">\r\n\t\t\t<img alt=\"loading...\" src={loading} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Loader;\r\n","export const mockData = {\r\n\tdisplayContactDetails: [\"Full Name\", \"Email\", \"Phone Numbers\"],\r\n\tcontacts: [\r\n\t\t{\r\n\t\t\tid: \"4D050C00-661E-492A-928E-631682BE6505\",\r\n\t\t\temail: \"rper1001@mit.edu\",\r\n\t\t\tfullName: \"radia perlman\",\r\n\t\t\tphoneNumbers: [\"0488445688\", \"+61488224568\", \"0393337119\"],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: \"DD7B7510-92CB-4F21-A054-BE7B7DAC126C\",\r\n\t\t\temail: \"alex@bell-labs.com\",\r\n\t\t\tfullName: \"Alex Bell\",\r\n\t\t\tphoneNumbers: [\"0385786688\", \"1800728069\"],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: \"864653FF-C040-4E1A-BD75-6AEDC749C83E\",\r\n\t\t\tfullName: \"fredrik IDESTAM\",\r\n\t\t\tphoneNumbers: [\"+6139888998\"],\r\n\t\t},\r\n\t],\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { mockData } from \"./mockData\";\r\n\r\nasync function fetchContacts(url, setData) {\r\n\ttry {\r\n\t\tconst res = await fetch(url);\r\n\t\tif (res.ok) {\r\n\t\t\tconst payload = await res.json();\r\n\t\t\tsetData({\r\n\t\t\t\tdata: payload,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\talert(\"Using mock data!\");\r\n\t\t\tsetData({\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tdata: mockData,\r\n\t\t\t});\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tconsole.error(e);\r\n\t}\r\n}\r\n\r\nexport function useFetchContacts(url, defaultResponse) {\r\n\tconst [data, setData] = useState(defaultResponse);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (url) {\r\n\t\t\t\tfetchContacts(url, setData);\r\n\t\t\t}\r\n\t\t}, 1000);\r\n\t}, [url]);\r\n\r\n\treturn data;\r\n}\r\n\r\nexport const addContact = async (endpoint = `/contact`, reqt) => {\r\n\tconst controller = new AbortController();\r\n\tconst signal = controller.signal;\r\n\tsetTimeout(() => {\r\n\t\tcontroller.abort();\r\n\t}, 1000);\r\n\ttry {\r\n\t\tlet isSuccess = false;\r\n\t\tconst res = fetch(\r\n\t\t\tendpoint,\r\n\t\t\t{\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(reqt),\r\n\t\t\t},\r\n\t\t\t{ signal }\r\n\t\t)\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then(() => (res.ok ? (isSuccess = true) : (isSuccess = false)));\r\n\t\treturn isSuccess;\r\n\t} catch (e) {\r\n\t\tconsole.error(e);\r\n\t}\r\n};\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport \"./ContactList.css\";\r\nimport { Button, Alert } from \"react-bootstrap\";\r\n\r\nexport default function ContactTable(props) {\r\n\tconst headers = props.data.displayContactDetails;\r\n\tconst maxColumnSpan = headers.length;\r\n\tconst rows = props.data.contacts;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"container m-12\">\r\n\t\t\t\t<Table responsive striped bordered hover>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t{headers.map((h, i) => (\r\n\t\t\t\t\t\t\t\t<th key={i}>{h}</th>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{rows && rows.length > 0 ? (\r\n\t\t\t\t\t\t\trows.map((r, i) => (\r\n\t\t\t\t\t\t\t\t<tr key={r.id}>\r\n\t\t\t\t\t\t\t\t\t<td key={i}>{r.fullName}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={i}>{r.email ? r.email : \"---\"}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={i}>\r\n\t\t\t\t\t\t\t\t\t\t{r.phoneNumbers && r.phoneNumbers.join(\" || \")}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td colspan={maxColumnSpan}>\r\n\t\t\t\t\t\t\t\t\t<Alert key=\"no-content\" variant=\"info\">\r\n\t\t\t\t\t\t\t\t\t\tNo Content\r\n\t\t\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td colSpan={maxColumnSpan} className=\"align-contents\">\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" className=\"px-4\" href=\"/addContact\">\r\n\t\t\t\t\t\t\t\t\tAdd new contact\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport \"./ContactList.css\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport * as apiService from \"../../apiService\";\r\nimport ContactTable from \"./ContactTable\";\r\n\r\nfunction ContactList(props) {\r\n\tlet fetchResponse;\r\n\tif (props.apiEndpoint) {\r\n\t\tfetchResponse = apiService.useFetchContacts(props.apiEndpoint, {\r\n\t\t\tisLoading: true,\r\n\t\t\tdata: null,\r\n\t\t});\r\n\t}\r\n\r\n\tif (fetchResponse && fetchResponse.isLoading) {\r\n\t\treturn <Loader />;\r\n\t}\r\n\r\n\treturn (\r\n\t\tfetchResponse &&\r\n\t\tfetchResponse.data &&\r\n\t\t!fetchResponse.isLoading && <ContactTable data={fetchResponse.data} />\r\n\t);\r\n}\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction NoMatch() {\r\n\tlet location = useLocation();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>\r\n\t\t\t\tNo match for <code>{location.pathname}</code>\r\n\t\t\t</h3>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default NoMatch;\r\n","import React, { useState } from \"react\";\r\nimport * as apiService from \"../../apiService\";\r\nimport \"./AddContact.css\";\r\nimport { Button, Alert } from \"react-bootstrap\";\r\n\r\nfunction AddContact(props) {\r\n\tconst {\r\n\t\tvalue: fullName,\r\n\t\tbind: bindFullName,\r\n\t\treset: resetFullName,\r\n\t} = useInput(\"\");\r\n\tconst { value: email, bind: bindEmail, reset: resetEmail } = useInput(\"\");\r\n\tconst {\r\n\t\tvalue: phoneNumbers,\r\n\t\tbind: bindPhoneNumbers,\r\n\t\treset: resetPhoneNumbers,\r\n\t} = useInputPhoneNumber([]);\r\n\r\n\tconst [request, setRequest] = useState({});\r\n\tconst [isValid, setValid] = useState(false);\r\n\r\n\tconst handleSubmit = (evt) => {\r\n\t\tevt.preventDefault();\r\n\t\tconst reqt = {\r\n\t\t\temail,\r\n\t\t\tfullName,\r\n\t\t\tphoneNumbers,\r\n\t\t};\r\n\t\tif (phoneNumbers) {\r\n\t\t\tvar phoneRegEx = new RegExp(\r\n\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\t`^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$`\r\n\t\t\t);\r\n\t\t\tfor (var i = 0; i < phoneNumbers.length; i++) {\r\n\t\t\t\tphoneNumbers[i].match(phoneRegEx) ? setValid(true) : setValid(false);\r\n\t\t\t}\r\n\r\n\t\t\tif (isValid) {\r\n\t\t\t\tsetRequest({\r\n\t\t\t\t\treqt,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tapiService.addContact(props.addContactEndpoint, reqt);\r\n\t\t\t\tresetEmail();\r\n\t\t\t\tresetFullName();\r\n\t\t\t\tresetPhoneNumbers();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Alert key=\"request\" variant=\"info\">\r\n\t\t\t\tNew Contact Details: {JSON.stringify(request)}\r\n\t\t\t</Alert>\r\n\t\t\t<form className=\"form-container\" onSubmit={handleSubmit}>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-sm-3 col-md-4\">\r\n\t\t\t\t\t\t<label htmlFor=\"subject\">Full Name</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-3 col-md-6\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t{...bindFullName}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tplaceholder=\"Enter full name\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-sm-3 col-md-4\">\r\n\t\t\t\t\t\t<label htmlFor=\"subject\">Email (Optional)</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-3 col-md-6\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t{...bindEmail}\r\n\t\t\t\t\t\t\tplaceholder=\"Enter email address\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-sm-3 col-md-4\">\r\n\t\t\t\t\t\t<label htmlFor=\"subject\">Phone Numbers</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-3 col-md-6\">\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tid=\"phoneNumber\"\r\n\t\t\t\t\t\t\t{...bindPhoneNumbers}\r\n\t\t\t\t\t\t\tplaceholder=\"Enter phone numbers\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Alert key=\"errPhoneNum\" variant=\"danger\">\r\n\t\t\t\t\t\t\tSeries of phone numbers should be comma separated (AU Format)\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t\t<Button variant=\"secondary\" className=\"px-5\" href=\"/\">\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t\t<Button variant=\"primary\" className=\"px-5\" type=\"submit\">\r\n\t\t\t\t\t\t\tSave Changes\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst useInput = (initialValue) => {\r\n\tconst [value, setValue] = useState(initialValue);\r\n\r\n\treturn {\r\n\t\tvalue,\r\n\t\tsetValue,\r\n\t\treset: () => setValue(initialValue),\r\n\t\tbind: {\r\n\t\t\tvalue,\r\n\t\t\tonChange: (event) => {\r\n\t\t\t\tsetValue(event.target.value);\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n};\r\n\r\nconst useInputPhoneNumber = (initialValue) => {\r\n\tconst [value, setValue] = useState(initialValue);\r\n\r\n\treturn {\r\n\t\tvalue,\r\n\t\tsetValue,\r\n\t\treset: () => setValue([]),\r\n\t\tbind: {\r\n\t\t\tvalue,\r\n\t\t\tonChange: (event) => {\r\n\t\t\t\tlet con = event.target.value;\r\n\t\t\t\tlet tempArr = [];\r\n\t\t\t\tif (con) {\r\n\t\t\t\t\ttempArr = con.split(\",\");\r\n\t\t\t\t}\r\n\t\t\t\tsetValue(tempArr);\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Header from \"./Components/Header\";\r\nimport Footer from \"./Components/Footer\";\r\nimport ContactList from \"./Components/ContactList/ContactList\";\r\nimport NoMatch from \"./Components/NoMatch\";\r\nimport AddContact from \"./Components/AddContact\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header />\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/contacts\">\r\n\t\t\t\t\t\t<ContactList apiEndpoint={`/contacts`} />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/addContact\">\r\n\t\t\t\t\t\t<AddContact apiEndpoint={`/contact`} />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"*\">\r\n\t\t\t\t\t\t<NoMatch />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t\t<Footer />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n\t<Router>\r\n\t\t<React.StrictMode>\r\n\t\t\t<App />\r\n\t\t</React.StrictMode>\r\n\t</Router>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}